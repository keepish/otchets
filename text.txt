using System;
using System.Net.Http;
using System.Threading;
using System.Threading.Tasks;

namespace Task1
{
    class Program
    {
        static async Task Main(string[] args)
        {
            Console.WriteLine("=== Временная избыточность - Повтор запросов ===");
            
            string url = "http://arcotel.ru";
            Console.WriteLine($"URL: {url}");
            Console.WriteLine($"Метод: GET");
            Console.WriteLine(new string('-', 40));
            
            // Простые настройки
            int maxAttempts = 3;
            int delayMs = 1000;
            
            // Создаем HttpClient один раз
            using (HttpClient client = new HttpClient())
            {
                // Настраиваем таймаут
                client.Timeout = TimeSpan.FromSeconds(10);
                
                // Переменная для результата
                string result = null;
                bool success = false;
                int attempt;
                
                // Простой цикл повторов
                for (attempt = 1; attempt <= maxAttempts; attempt++)
                {
                    Console.WriteLine($"Попытка {attempt} из {maxAttempts}...");
                    
                    try
                    {
                        // Выполняем GET запрос
                        HttpResponseMessage response = await client.GetAsync(url);
                        
                        if (response.IsSuccessStatusCode)
                        {
                            // Читаем результат
                            result = await response.Content.ReadAsStringAsync();
                            success = true;
                            Console.WriteLine($"УСПЕХ! Статус код: {(int)response.StatusCode}");
                            break; // Выходим из цикла при успехе
                        }
                        else
                        {
                            Console.WriteLine($"Ошибка HTTP: {(int)response.StatusCode}");
                        }
                    }
                    catch (Exception ex)
                    {
                        Console.WriteLine($"Ошибка: {ex.Message}");
                    }
                    
                    // Если не последняя попытка - ждем
                    if (attempt < maxAttempts)
                    {
                        Console.WriteLine($"Ждем {delayMs} мс...");
                        Thread.Sleep(delayMs);
                    }
                }
                
                // Выводим итоговый результат
                Console.WriteLine(new string('-', 40));
                
                if (success)
                {
                    Console.WriteLine($"Успешно выполнено за {attempt} попыток");
                    Console.WriteLine($"Размер ответа: {result.Length} символов");
                    
                    if (result.Length > 0)
                    {
                        Console.WriteLine("Начало ответа:");
                        int previewLength = Math.Min(200, result.Length);
                        Console.WriteLine(result.Substring(0, previewLength));
                    }
                }
                else
                {
                    Console.WriteLine($"Все {maxAttempts} попыток завершились ошибкой");
                }
            }
            
            Console.WriteLine("\nНажмите Enter для выхода...");
            Console.ReadLine();
        }
    }
}

